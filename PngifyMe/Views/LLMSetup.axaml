<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             mc:Ignorable="d" d:DesignWidth="600" d:DesignHeight="1200"
			 xmlns:i="https://github.com/projektanker/icons.avalonia"
			  xmlns:vm="clr-namespace:PngifyMe.ViewModels"
			  xmlns:vmh="clr-namespace:PngifyMe.ViewModels.Helper"
			 xmlns:helper="clr-namespace:PngifyMe.Views.Helper"
			 xmlns:sett="clr-namespace:PngifyMe.Services.Settings"
			 xmlns:ttssett="clr-namespace:PngifyMe.Services.TTSPet.Settings"
			 xmlns:conv="clr-namespace:PngifyMe.Views.Converter"
             x:Class="PngifyMe.Views.LLMSetup"
			 x:DataType="vm:LLMProviderViewModel"
			 >
	<Design.DataContext>
		<vm:LLMProviderViewModel/>
	</Design.DataContext>
	<UserControl.Resources>
		<conv:ListToStringConverter x:Key="ListToStringConverter" />
	</UserControl.Resources>
	<Grid RowDefinitions="Auto,*">
		<StackPanel Spacing="10">
			<TextBlock FontSize="24">TTS Pet Setup</TextBlock>
			<TabControl>
				<TabItem Header="LLM">
					<StackPanel Spacing="10">
						<StackPanel Orientation="Horizontal" Spacing="20">
							<TextBlock Margin="0,5,0,5" FontSize="24">Settings</TextBlock>
							<Button Classes="Secondary" Theme="{DynamicResource OutlineButton}"
									Click="ApplyLLMSettings">Apply and Reload</Button>
						</StackPanel>

						<CheckBox IsChecked="{Binding Settings.JustRead, Mode=TwoWay}"
								  ToolTip.Tip="if checked: will just read all messages and not respond using the llm"
								  >Just Read, no LLM</CheckBox>
						<StackPanel Orientation="Horizontal" Spacing="5"  ToolTip.Tip="Insert your openai key or other provider">
							<Label VerticalAlignment="Center" >OpenAI API Key: </Label>
							<TextBox PasswordChar="*" Width="200" Text="{Binding Settings.OpenAIKey}"></TextBox>
						</StackPanel>
						<StackPanel Orientation="Horizontal" Spacing="5">
							<Label VerticalAlignment="Center" ToolTip.Tip="for non OpenAI Models" >Custom Domain: </Label>
							<TextBox MinWidth="100" Text="{Binding Settings.Domain}"></TextBox>
							<TextBlock VerticalAlignment="Center">(optional)</TextBlock>
						</StackPanel>
						<StackPanel Orientation="Horizontal" Spacing="5" ToolTip.Tip="Input your api model name">
							<Label VerticalAlignment="Center" >Model: </Label>
							<TextBox MinWidth="100" Text="{Binding Settings.ModelName}"></TextBox>
						</StackPanel>

						<Label VerticalAlignment="Center" >System Message (Base instructions):</Label>
						<StackPanel Orientation="Horizontal" Spacing="5">
							<TextBox MaxLines="100" Width="500" Height="200"
									 VerticalContentAlignment="Top"
									 Padding="5"
									 AcceptsReturn="True" TextWrapping="Wrap"
									 Text="{Binding Settings.SystemPrompt}"></TextBox>
						</StackPanel>
					</StackPanel>
				</TabItem>
				<TabItem Header="Twitch">
					<StackPanel Spacing="10">

						<TextBlock Margin="0,5,0,5"  FontSize="24">Twitch triggers</TextBlock>
						<StackPanel Orientation="Horizontal" Spacing="5" ToolTip.Tip="Minimum bits threshhold to react">
							<Label VerticalAlignment="Center">Minimum Bits: </Label>
							<helper:UintTextBox MinWidth="100" Text="{Binding Settings.MinBits}"></helper:UintTextBox>
						</StackPanel>
						<StackPanel Orientation="Horizontal" Spacing="5" ToolTip.Tip="the name of the twitch redeem which should trigger the ttspet">
							<Label VerticalAlignment="Center" >Twitch Redeem: </Label>
							<TextBox ToolTip.Tip="Enter the name of any redeem that should trigger the ttspet"
									 MinWidth="100"
									 Text="{Binding Settings.Redeem}"></TextBox>
						</StackPanel>
						<StackPanel Orientation="Horizontal" Spacing="5" ToolTip.Tip="TTSPet will respond to any chat message starting with this, leave empty to disable">
							<Label VerticalAlignment="Center" >Chat Trigger: </Label>
							<TextBox MinWidth="100"
									 Text="{Binding Settings.ChatTrigger}"></TextBox>
						</StackPanel>
						<CheckBox ToolTip.Tip="Will read new followers if enabled"
							IsChecked="{Binding Settings.ReactFollowers, Mode=TwoWay}">React to followers</CheckBox>
					</StackPanel>
				</TabItem>
				<TabItem Header="TTS">
					<StackPanel Spacing="10">
						<TextBlock Margin="0,5,0,5" FontSize="24">Choose your TTS Provider</TextBlock>

						<StackPanel Orientation="Horizontal" Spacing="5" ToolTip.Tip="Pick your TTS provider">
							<Label VerticalAlignment="Center">TTS Provider:</Label>
							<ComboBox SelectionChanged="UpdateTTSProvider"
									  ItemsSource="{Binding TTSProviderKeys}"
									  SelectedItem="{Binding Settings.TTSSystem}"/>
						</StackPanel>
						<ContentControl Content="{Binding TTSSettings}">
							<ContentControl.DataTemplates>
								<DataTemplate DataType="{x:Type ttssett:StreamElementsTTSSettings}">
									<StackPanel Orientation="Horizontal" Spacing="5">
										<Label VerticalAlignment="Center" >TTS Voice: </Label>
										<ComboBox ItemsSource="{Binding VoiceList}" DisplayMemberBinding="{Binding Title}"
												  SelectedItem="{Binding Voice}"/>
									</StackPanel>
								</DataTemplate>

								<DataTemplate DataType="{x:Type ttssett:TikTokSettings}">
									<StackPanel Spacing="10">
										<StackPanel Orientation="Horizontal" Spacing="5">
											<Label VerticalAlignment="Center">Endpoint: </Label>
											<TextBox MinWidth="150" Text="{Binding Endpoint}"></TextBox>
										</StackPanel>

										<StackPanel Orientation="Horizontal" Spacing="5">
											<Label VerticalAlignment="Center" >TTS Voice: </Label>
											<ComboBox ItemsSource="{Binding VoiceList}" DisplayMemberBinding="{Binding Name}"
													  SelectedItem="{Binding Voice}"/>
										</StackPanel>
									</StackPanel>
								</DataTemplate>

								<DataTemplate DataType="{x:Type ttssett:OpenAITTSSettings}">
									<StackPanel Orientation="Horizontal" Spacing="5">
										<Label VerticalAlignment="Center" >TTS Voice: </Label>
										<ComboBox ItemsSource="{Binding TTSTypes}"
												  SelectedItem="{Binding TTSVoice}"/>
										<Label VerticalAlignment="Center" >TTS Model: </Label>
										<TextBox Text="{Binding TTSModel}"></TextBox>
									</StackPanel>
								</DataTemplate>

							</ContentControl.DataTemplates>
						</ContentControl>
					</StackPanel>
				</TabItem>
				<TabItem Header="Filter">
					<StackPanel Spacing="10">
						<TextBlock Margin="0,5,0,5" FontSize="24">Filter</TextBlock>
						<StackPanel Orientation="Horizontal" Spacing="5" ToolTip.Tip="This phrase will replace all filtered words found in the text the ttspet is about to speak">
							<TextBlock VerticalAlignment="Center">Replacement:</TextBlock>
							<TextBox MinWidth="100" Text="{Binding Settings.Replacement}"></TextBox>
						</StackPanel>
						<StackPanel Spacing="5" ToolTip.Tip="Enter all filtered words you want to add">
							<TextBlock VerticalAlignment="Center">Filtered Words (separated with ";"):</TextBlock>
							<TextBox Text="{Binding Settings.BannedPhrases ,Converter={StaticResource ListToStringConverter}, Mode=TwoWay}"
									 VerticalContentAlignment="Top"
									 HorizontalAlignment="Left"
									 MaxLines="100" Width="500" Height="200"
									 AcceptsReturn="True" TextWrapping="Wrap">
							</TextBox>
						</StackPanel>

					</StackPanel>
				</TabItem>
				<TabItem Header="History and Test">
					<StackPanel Spacing="10">
						<TextBlock Margin="0,5,0,5"  FontSize="24">Test your setup</TextBlock>
						<StackPanel Orientation="Horizontal" Spacing="5">
							<Label VerticalAlignment="Center" >Input Text: </Label>
							<TextBox x:Name="inputText" Width="250" >Hello, how are you?</TextBox>
							<Button Classes="Secondary" Theme="{DynamicResource OutlineButton}"
									ToolTip.Tip="Use this to respond to the input text"
									Click="TriggerTest">Respond</Button>
							<Button Classes="Secondary" Theme="{DynamicResource OutlineButton}"
									ToolTip.Tip="Use this to read the input text (usefull to test tts voices)"
									Click="JustRead">Read</Button>
						</StackPanel>

						<Rectangle Margin="0,5,0,5" Height="1" Fill="White"></Rectangle>

						<TextBlock FontSize="24">History</TextBlock>

						<DataGrid ItemsSource="{Binding Messages}"
								  AutoGenerateColumns="False" IsReadOnly="True"
								  GridLinesVisibility="All"
								  MinHeight="300" MaxHeight="600"
								  BorderThickness="1" BorderBrush="Gray">
							<DataGrid.Columns>
								<DataGridTextColumn IsReadOnly="True" Header="TimeStamp" Binding="{Binding Created}"/>
								<DataGridTextColumn IsReadOnly="True"  Header="Input" Binding="{Binding Input}"/>
								<DataGridTextColumn IsReadOnly="True"  Header="Output" Binding="{Binding Output}"/>
								<DataGridTextColumn IsReadOnly="True"  Header="User" Binding="{Binding UserName}"/>
								<DataGridCheckBoxColumn IsReadOnly="True"  Header="Read" Binding="{Binding Read}"/>
							</DataGrid.Columns>
						</DataGrid>
					</StackPanel>

				</TabItem>
			</TabControl>
		</StackPanel>


	</Grid>
</UserControl>
